{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pras\\\\source\\\\phase3\\\\Project_Phase2_React-main\\\\ProjectSolution\\\\React-Event-Project-With-JSON-Server\\\\Event_Management\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport api from \"../api/events\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddEvent from \"./AddEvent\";\nimport EventList from \"./EventList\";\nimport EventDetail from \"./EventDetail\";\nimport EditEvent from \"./EditEvent\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"events\";\n  const [events, setEvents] = useState([]);\n\n  const retrieveEvents = async () => {\n    const response = await api.get(\"/events\");\n    return response.data;\n  };\n\n  const addEventHandler = async event => {\n    console.log(event);\n    const request = {\n      id: uuid(),\n      ...event\n    };\n    const response = await api.post(\"/events\", request);\n    console.log(response);\n    setEvents([...events, response.data]);\n  };\n\n  const updateEventHandler = async event => {\n    const response = await api.put(`/events/${event.id}`, event);\n    const {\n      id,\n      title,\n      domain,\n      price,\n      location,\n      startDate,\n      endDate,\n      photoPath,\n      description,\n      organizerName\n    } = response.data;\n    setEvents(events.map(event => {\n      return event.id === id ? { ...response.data\n      } : event;\n    }));\n  };\n\n  const removeEventHandler = async id => {\n    await api.delete(`/events/${id}`);\n    const newEventList = events.filter(event => {\n      return event.id !== id;\n    });\n    setEvents(newEventList);\n  };\n\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n    const getAllEvents = async () => {\n      const allEvents = await retrieveEvents();\n      if (allEvents) setEvents(allEvents);\n    };\n\n    getAllEvents();\n  }, []);\n  useEffect(() => {//localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [events]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(EventList, { ...props,\n            events: events,\n            getEventId: removeEventHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddEvent, { ...props,\n            addEventHandler: addEventHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          render: props => /*#__PURE__*/_jsxDEV(EditEvent, { ...props,\n            updateEventHandler: updateEventHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/event/:id\",\n          component: EventDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PyI8rXVa6+tWe4bLHczC4yXu/tw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pras/source/phase3/Project_Phase2_React-main/ProjectSolution/React-Event-Project-With-JSON-Server/Event_Management/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","uuid","api","Header","AddEvent","EventList","EventDetail","EditEvent","App","LOCAL_STORAGE_KEY","events","setEvents","retrieveEvents","response","get","data","addEventHandler","event","console","log","request","id","post","updateEventHandler","put","title","domain","price","location","startDate","endDate","photoPath","description","organizerName","map","removeEventHandler","delete","newEventList","filter","getAllEvents","allEvents","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport api from \"../api/events\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddEvent from \"./AddEvent\";\nimport EventList from \"./EventList\";\nimport EventDetail from \"./EventDetail\";\nimport EditEvent from \"./EditEvent\";\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"events\";\n  const [events, setEvents] = useState([]);\n\n  const retrieveEvents = async () => {\n    const response = await api.get(\"/events\");\n    return response.data;\n  };\n\n  const addEventHandler = async (event) => {\n    console.log(event);\n    const request = {\n      id: uuid(),\n      ...event,\n    };\n\n    const response = await api.post(\"/events\", request);\n    console.log(response);\n    setEvents([...events, response.data]);\n  };\n\n  const updateEventHandler = async (event) => {\n    const response = await api.put(`/events/${event.id}`, event);\n    const { id, title, domain, price, location, startDate, endDate, photoPath, description, organizerName } = response.data;\n    setEvents(\n      events.map((event) => {\n        return event.id === id ? { ...response.data } : event;\n      })\n    );\n  };\n\n  const removeEventHandler = async (id) => {\n    await api.delete(`/events/${id}`);\n    const newEventList = events.filter((event) => {\n      return event.id !== id;\n    });\n    setEvents(newEventList);\n  };\n\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n    const getAllEvents = async () => {\n      const allEvents = await retrieveEvents();\n      if (allEvents) setEvents(allEvents);\n    };\n    getAllEvents();\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [events]);\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <EventList\n                {...props}\n                events={events}\n                getEventId={removeEventHandler}\n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddEvent {...props} addEventHandler={addEventHandler} />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditEvent\n                {...props}\n                updateEventHandler={updateEventHandler}\n              />\n            )}\n          />\n\n          <Route path=\"/event/:id\" component={EventDetail} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}